<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.third.enterprise.dao.ProductMapper" >
  <resultMap id="BaseResultMap" type="com.third.enterprise.bean.Product" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="product_id" property="productId" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="budget" property="budget" jdbcType="DECIMAL" />
    <result column="expect_cost" property="expectCost" jdbcType="DECIMAL" />
    <result column="real_cost" property="realCost" jdbcType="DECIMAL" />
    <result column="period_start" property="periodStart" jdbcType="VARCHAR" />
    <result column="period_end" property="periodEnd" jdbcType="VARCHAR" />

    <result column="expect_delivery_time" property="expectDeliveryTime" jdbcType="VARCHAR" />
    <result column="real_delivery_time" property="realDeliveryTime" jdbcType="DATE" />
    <result column="contract_time" property="contractTime" jdbcType="DATE" />
    <result column="desc" property="desc" jdbcType="VARCHAR" />
    <result column="delivery_desc" property="deliveryDesc" jdbcType="VARCHAR" />
    <result column="check_desc" property="checkDesc" jdbcType="VARCHAR" />
    <result column="publish_status" property="publishStatus" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="owner_id" property="ownerId" jdbcType="INTEGER" />
    <result column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="phone" property="phone" jdbcType="VARCHAR"/>
    <result column="real_name" property="realName" jdbcType="VARCHAR"/>
    <result column="doing_product" property="doingProduct" jdbcType="INTEGER"/>

    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="attr" property="attr" jdbcType="VARCHAR" />
    <result column="detail" property="detail" jdbcType="VARCHAR" />
    <result column="service_cost" property="serviceCost" jdbcType="VARCHAR" />
    <result column="cost_type" property="costType" jdbcType="VARCHAR" />

    <result column="on_wait" property="onWait" jdbcType="INTEGER"/>
    <result column="on_doing" property="onDoing" jdbcType="INTEGER"/>

    <result column="settle_amount" property="settleAmount" jdbcType="DECIMAL" />

  </resultMap>
  <sql id="Base_Column_List" >
    id, product_id, name, budget, expect_cost,real_cost, period_start,period_end, expect_delivery_time, real_delivery_time,contract_time,
    `desc`, delivery_desc, check_desc, publish_status, status, owner_id, order_id, create_time, update_time,
    type, attr, detail, service_cost, cost_type
  </sql>
  <select id="selectByProductId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
      t1.id ,
      t1.product_id ,
      t1.name ,
      t1.budget ,
      t1.expect_cost,
      t1.real_cost ,
      t1.period_start ,
      t1.period_end ,
      t1.expect_delivery_time ,
      t1.real_delivery_time ,
      t1.contract_time ,
      t1.`desc` ,
      t1.delivery_desc ,
      t1.check_desc ,
      t1.publish_status ,
      t1.status ,
      t1.owner_id ,
      t1.order_id ,
      t1.create_time ,
      t1.update_time ,
      t1.type,
      t1.attr,
      t1.detail,
      t1.service_cost,
      t1.cost_type,
      t2.phone ,
      t2.real_name
    from t_product t1
    left join t_user t2
    on t1.owner_id = t2.id
    where t1.id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_product
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insertSelective" parameterType="com.third.enterprise.bean.Product"
          useGeneratedKeys="true" keyProperty="id">
    insert into t_product
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="productId != null" >
        product_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="budget != null" >
        budget,
      </if>
      <if test="expectCost != null" >
        expect_cost,
      </if>
      <if test="realCost != null" >
        real_cost,
      </if>
      <if test="periodStart != null" >
        period_start,
      </if>
      <if test="periodEnd != null" >
        period_end,
      </if>
      <if test="expectDeliveryTime != null" >
        expect_delivery_time,
      </if>
      <if test="realDeliveryTime != null" >
        real_delivery_time,
      </if>
      <if test="desc != null" >
        `desc`,
      </if>
      <if test="deliveryDesc != null" >
        delivery_desc,
      </if>
      <if test="publishStatus != null" >
        publish_status,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="ownerId != null" >
        owner_id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>

      <if test="type != null" >
        type,
      </if>
      <if test="attr != null" >
        attr,
      </if>
      <if test="detail != null" >
        detail,
      </if>
      <if test="serviceCost != null" >
        service_cost,
      </if>
      <if test="costType != null" >
        cost_type,
      </if>

    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="productId != null" >
        #{productId,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="budget != null" >
        #{budget,jdbcType=DECIMAL},
      </if>
      <if test="expectCost != null" >
        #{expectCost,jdbcType=DECIMAL},
      </if>
      <if test="realCost != null" >
        #{realCost,jdbcType=DECIMAL},
      </if>
      <if test="periodStart != null" >
        #{periodStart,jdbcType=VARCHAR},
      </if>
      <if test="periodEnd != null" >
        #{periodEnd,jdbcType=VARCHAR},
      </if>
      <if test="expectDeliveryTime != null" >
        #{expectDeliveryTime,jdbcType=VARCHAR},
      </if>
      <if test="realDeliveryTime != null" >
        #{realDeliveryTime,jdbcType=DATE},
      </if>
      <if test="desc != null" >
        #{desc,jdbcType=VARCHAR},
      </if>
      <if test="deliveryDesc != null" >
        #{deliveryDesc,jdbcType=VARCHAR},
      </if>
      <if test="publishStatus != null" >
        #{publishStatus,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="ownerId != null" >
        #{ownerId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>

      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="attr != null" >
        #{attr,jdbcType=VARCHAR},
      </if>
      <if test="detail != null" >
        #{detail,jdbcType=VARCHAR},
      </if>
      <if test="serviceCost != null" >
        #{serviceCost,jdbcType=VARCHAR},
      </if>
      <if test="costType != null" >
        #{costType,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.third.enterprise.bean.Product" >
    update t_product
    <set >
      <if test="productId != null" >
        product_id = #{productId,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="budget != null" >
        budget = #{budget,jdbcType=DECIMAL},
      </if>
      <if test="expectCost != null" >
        expect_cost = #{expectCost,jdbcType=DECIMAL},
      </if>
      <if test="realCost != null" >
        real_cost = #{realCost,jdbcType=DECIMAL},
      </if>
      <if test="periodStart != null" >
        period_start = #{periodStart,jdbcType=VARCHAR},
      </if>
      <if test="periodEnd != null" >
        period_end = #{periodEnd,jdbcType=VARCHAR},
      </if>
      <if test="expectDeliveryTime != null" >
        expect_delivery_time = #{expectDeliveryTime,jdbcType=VARCHAR},
      </if>
      <if test="realDeliveryTime != null" >
        real_delivery_time = #{realDeliveryTime,jdbcType=DATE},
      </if>
      <if test="contractTime != null" >
        contract_time = #{contractTime,jdbcType=DATE},
      </if>
      <if test="desc != null" >
        `desc` = #{desc,jdbcType=VARCHAR},
      </if>
      <if test="deliveryDesc != null" >
        delivery_desc = #{deliveryDesc,jdbcType=VARCHAR},
      </if>
      <if test="checkDesc != null" >
        check_desc = #{checkDesc,jdbcType=VARCHAR},
      </if>
      <if test="publishStatus != null" >
        publish_status = #{publishStatus,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="ownerId != null" >
        owner_id = #{ownerId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=INTEGER},
      </if>

      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="attr != null" >
        attr = #{attr,jdbcType=VARCHAR},
      </if>
      <if test="detail != null" >
        detail = #{detail,jdbcType=VARCHAR},
      </if>
      <if test="serviceCost != null" >
        service_cost = #{serviceCost,jdbcType=VARCHAR},
      </if>
      <if test="costType != null" >
        cost_type = #{costType,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="listProduct" resultMap="BaseResultMap"
          parameterType="com.third.enterprise.bean.request.ProductListRequest" >
    select
      t1.*,
      ifnull(t2.settle_amount,0.00) settle_amount
    from t_product t1
    left join (
    select product_id,sum(amount) settle_amount from t_check_order where `status` = '4' group by product_id
    )t2
    on t1.id = t2.product_id

    where 1=1
    <if test="productName != null and productName != ''">
      and t1.name like concat('%',#{productName},'%')
    </if>
    <if test="publishStatus != null and publishStatus != ''">
      and t1.publish_status = #{publishStatus}
    </if>
    <if test="status != null and status != ''">
      and t1.status = #{status}
    </if>
    <if test="publishTimeStart != null and publishTimeStart!= ''">
      and t1.create_time >= #{publishTimeStart}
    </if>
    <if test="publishTimeEnd != null and publishTimeStart != ''">
      and t1.create_time <![CDATA[<=]]> #{publishTimeEnd}
    </if>
    ORDER BY t1.id desc
  </select>

  <select id="listCheckProduct" resultMap="BaseResultMap"
          parameterType="com.third.enterprise.bean.request.ProductListRequest" >
    select
    <include refid="Base_Column_List" />
    from t_product
    where 1=1
    <if test="productName != null and productName != ''">
      and name like concat('%',#{productName},'%')
    </if>
    <if test="status != null and status != ''">
      and status = #{status}
    </if>
    <if test="status == null or status == ''">
      and status in('3','4')
    </if>
    <if test="deliveryTimeStart != null and deliveryTimeStart!= ''">
      and real_delivery_time >= #{deliveryTimeStart}
    </if>
    <if test="deliveryTimeEnd != null and deliveryTimeStart != ''">
      and real_delivery_time <![CDATA[<=]]> #{deliveryTimeEnd}
    </if>
    ORDER BY id desc
  </select>

  <update id="updateProductStatus">
    update t_product
    set status = #{status}
    where id = #{productId}
  </update>

  <update id="revokeProduct">
    update t_product
    set publish_status = #{status}
    where id = #{productId}
  </update>

  <select id="statProduct" resultType="com.third.enterprise.bean.response.ProductStatResponse">
    SELECT
      t1.totalCount ,
      t1.doingCount ,
      t1.finishCount ,
      ifnull(t2.settleAmount,0) settleAmount
    FROM
      (select sum(1) totalCount ,
              sum(CASE STATUS WHEN 2 THEN 1 ELSE 0 END) doingCount ,
              sum(CASE STATUS WHEN 3 THEN 1 ELSE 0 END) finishCount
       from t_product) t1,
      (
        SELECT
          sum(amount) settleAmount
        FROM
          t_check_order
        WHERE
        `status` = '4'
      ) t2
  </select>

  <!--<select id="countListChooseProduct" resultType="java.lang.Integer"
          parameterType="com.third.enterprise.bean.request.ProductListRequest">
    select
      count(1)
    from t_order t1
    left join t_product t2
    on t1.product_id = t2.id
    left join t_user t3
    on t1.user_id = t3.id
    left join(
    select owner_id,count(1) doing_product from t_product where `status` = '2' GROUP BY owner_id
    )t4
    on t1.user_id = t4.owner_id
    where t1.`status` = '1' and t2.`status` = '1'
    <if test="productName != null and productName != ''">
      and t2.name like concat('%',#{productName},'%')
    </if>
    <if test="realName != null and realName != ''">
      and t3.real_name like concat('%',#{realName},'%')
    </if>
    <if test="phone != null and phone != ''">
      and t3.phone = #{phone}
    </if>
    <if test="doingProduct != null and doingProduct != 0">
      and t4.doing_product = #{doingProduct}
    </if>
  </select>-->

  <select id="listChooseProduct" resultMap="BaseResultMap"
          parameterType="com.third.enterprise.bean.request.ProductListRequest">

    select
        t1.id ,
        t1.product_id ,
        t1.name ,
        t1.budget ,
        t1.expect_cost,
        t1.real_cost ,
        t1.period_start ,
        t1.period_end ,
        t1.expect_delivery_time ,
        t1.real_delivery_time ,
        t1.contract_time ,
        t1.`desc` ,
        t1.delivery_desc ,
        t1.check_desc ,
        t1.publish_status ,
        t1.status ,
        t1.owner_id ,
        t1.order_id ,
        t1.create_time ,
        t1.update_time ,
        t1.type,
        t1.attr,
        t1.detail,
        t1.service_cost,
        t1.cost_type,
        ifnull(t2.on_wait,0) on_wait,
        ifnull(t2.on_doing,0) on_doing
    from t_product t1
    left join(
        select product_id ,
            sum(case status when '1' then 1 else 0 end) as on_wait,
            sum(case status when '2' then 1 else 0 end) as on_doing
        from t_order
        group by product_id
    )t2
    on t1.id = t2.product_id
    where 1=1 and t1.publish_status = '1'
    <if test="productName != null and productName != ''">
      and t1.name like concat('%',#{productName},'%')
    </if>
  </select>

</mapper>